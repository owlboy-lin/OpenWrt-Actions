#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: ASUS_RT-Acrh17

on:
  schedule:
    - cron: 0 20 * * 5
      
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/ASUS_RT-Acrh17.yml'
#      - 'LeanR9-x64-simple'

  watch:
    types: [started]

      
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FIRMWARE_NAME: ASUS_RT-Acrh17
  TARGET: ipq40xx
  SUBTARGET: generic
  CONFIG_FILE: 
  DIY_SH: diy.sh
  UPLOAD_ALL: false
  SSH_ACTIONS: false
  extract:  false
  rename: true
  Gzip_file: false
  UPLOAD_ZIP: true
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
          
      - name: Set Date
        run: |
           date=$(TZ=UTC-8 date +"%Y.%m.%d-%H%M%S")
           echo "::set-env name=DATE::$date"
           
      - name: new name
        run : |
           firmware_name="${FIRMWARE_NAME}-${DATE}"
           release_name="${DATE}-${FIRMWARE_NAME}"
           echo "::set-env name=NEW_NAME::$firmware_name"
           echo "::set-env name=RELEASE_NAME::$release_name"
           
           
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # 利用挂载在 /mnt/ 的 14G 额外空间:
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Clone source code
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
      - name: 自定义插件主题。
        run: |
          # Add a feed source
          sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
          
          # Import external feeds
          git clone https://github.com/kenzok8/openwrt-packages.git package/kenzok8

          # git clone https://github.com/openwrt-develop/luci-theme-atmaterial package/luci-theme-atmaterial

          git clone https://github.com/rosywrt/luci-theme-rosy package/luci-theme-rosy

          # luci-theme-argon
          cd openwrt/package/lean  
          rm -rf luci-theme-argon  
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git  
        
      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 

          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 

          # 编译x64固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_Generic=y
          # EOF

          # 编译ASUS_RT-Acrh17的固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ipq40xx=y
          CONFIG_TARGET_ipq40xx_DEVICE_asus_rt-acrh17=y
          CONFIG_TARGET_BOARD="ipq40xx"
          EOF

          # 编译K3的固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_bcm53xx=y
          # CONFIG_TARGET_bcm53xx_DEVICE_phicomm-k3=y
          # CONFIG_TARGET_BOARD="bcm53xx"
          # EOF
          
          # 固件压缩:
          # cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_GZIP=y
          # EOF

          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF

          # Image Options:
          # cat >> .config <<EOF
          # CONFIG_TARGET_KERNEL_PARTSIZE=32
          # CONFIG_TARGET_ROOTFS_PARTSIZE=2048
          # CONFIG_TARGET_ROOTFS_PARTNAME=""
          # EOF
          
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF

          # 多文件系统支持:
          cat >> .config <<EOF
          #
          # Filesystems
          #
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-vfat=y
          CONFIG_PACKAGE_kmod-fuse=y
          EOF

          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF

          # 常用LuCI插件选择:
          cat >> .config <<EOF
          #
          # 3. Applications
          #
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          # CONFIG_PACKAGE_luci-app-acme is not set
          # CONFIG_PACKAGE_luci-app-adblock is not set
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          # CONFIG_PACKAGE_luci-app-advanced-reboot is not set
          # CONFIG_PACKAGE_luci-app-advancedsetting is not set
          # CONFIG_PACKAGE_luci-app-ahcp is not set
          # CONFIG_PACKAGE_luci-app-airplay2 is not set
          CONFIG_PACKAGE_luci-app-aliddns=y
          # CONFIG_PACKAGE_luci-app-amule is not set
          # CONFIG_PACKAGE_luci-app-aria2 is not set
          CONFIG_PACKAGE_luci-app-arpbind=y
          # CONFIG_PACKAGE_luci-app-asterisk is not set
          # CONFIG_PACKAGE_luci-app-attendedsysupgrade is not set
          CONFIG_PACKAGE_luci-app-autoreboot=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web is not set
          # CONFIG_PACKAGE_luci-app-bcp38 is not set
          # CONFIG_PACKAGE_luci-app-bird1-ipv4 is not set
          # CONFIG_PACKAGE_luci-app-bird1-ipv6 is not set
          # CONFIG_PACKAGE_luci-app-bmx6 is not set
          # CONFIG_PACKAGE_luci-app-bmx7 is not set
          # CONFIG_PACKAGE_luci-app-cifs-mount is not set
          # CONFIG_PACKAGE_luci-app-cifsd is not set
          # CONFIG_PACKAGE_luci-app-cjdns is not set
          # CONFIG_PACKAGE_luci-app-clamav is not set
          # CONFIG_PACKAGE_luci-app-commands is not set
          CONFIG_PACKAGE_luci-app-cpufreq=y
          # CONFIG_PACKAGE_luci-app-cshark is not set
          CONFIG_PACKAGE_luci-app-ddns=y
          # CONFIG_PACKAGE_luci-app-diag-core is not set
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_mdadm=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_kmod_md_raid456=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_kmod_md_linear=y
          # CONFIG_PACKAGE_luci-app-dnscrypt-proxy is not set
          # CONFIG_PACKAGE_luci-app-dnsforwarder is not set
          CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-dump1090 is not set
          # CONFIG_PACKAGE_luci-app-dynapoint is not set
          # CONFIG_PACKAGE_luci-app-e2guardian is not set
          # CONFIG_PACKAGE_luci-app-eqos is not set
          # CONFIG_PACKAGE_luci-app-familycloud is not set
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-flowoffload=y
          # CONFIG_PACKAGE_luci-app-freifunk-diagnostics is not set
          # CONFIG_PACKAGE_luci-app-freifunk-policyrouting is not set
          # CONFIG_PACKAGE_luci-app-freifunk-widgets is not set
          # CONFIG_PACKAGE_luci-app-frpc is not set
          # CONFIG_PACKAGE_luci-app-frps is not set
          # CONFIG_PACKAGE_luci-app-fwknopd is not set
          # CONFIG_PACKAGE_luci-app-gost is not set
          CONFIG_PACKAGE_luci-app-guest-wifi=y
          # CONFIG_PACKAGE_luci-app-haproxy-tcp is not set
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-hnet=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          # CONFIG_PACKAGE_luci-app-kodexplorer is not set
          CONFIG_PACKAGE_luci-app-koolproxyR=y
          # CONFIG_PACKAGE_luci-app-lxc is not set
          # CONFIG_PACKAGE_luci-app-meshwizard is not set
          CONFIG_PACKAGE_luci-app-minidlna=y
          CONFIG_PACKAGE_luci-app-mjpg-streamer=y
          # CONFIG_PACKAGE_luci-app-mtwifi is not set
          # CONFIG_PACKAGE_luci-app-music-remote-center is not set
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          # CONFIG_PACKAGE_luci-app-n2n_v2 is not set
          CONFIG_PACKAGE_luci-app-netdata=y
          # CONFIG_PACKAGE_luci-app-nfs is not set
          # CONFIG_PACKAGE_luci-app-nft-qos is not set
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          # CONFIG_PACKAGE_luci-app-noddos is not set
          # CONFIG_PACKAGE_luci-app-nps is not set
          # CONFIG_PACKAGE_luci-app-ntpc is not set
          # CONFIG_PACKAGE_luci-app-ocserv is not set
          # CONFIG_PACKAGE_luci-app-olsr is not set
          # CONFIG_PACKAGE_luci-app-olsr-services is not set
          # CONFIG_PACKAGE_luci-app-olsr-viz is not set
          # CONFIG_PACKAGE_luci-app-openclash is not set
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-p910nd is not set
          # CONFIG_PACKAGE_luci-app-pagekitec is not set
          # CONFIG_PACKAGE_luci-app-passwall is not set

          #
          # Configuration
          #
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_kcptun is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs is not set
          # CONFIG_PACKAGE_luci-app-polipo is not set
          # CONFIG_PACKAGE_luci-app-pppoe-relay is not set
          # CONFIG_PACKAGE_luci-app-privoxy is not set
          # CONFIG_PACKAGE_luci-app-ps3netsrv is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-qos is not set
          # CONFIG_PACKAGE_luci-app-radicale is not set
          CONFIG_PACKAGE_luci-app-ramfree=y
          # CONFIG_PACKAGE_luci-app-rclone is not set
          # CONFIG_PACKAGE_luci-app-rp-pppoe-server is not set
          CONFIG_PACKAGE_luci-app-samba=y
          # CONFIG_PACKAGE_luci-app-samba4 is not set
          # CONFIG_PACKAGE_luci-app-shadowsocks-libev is not set
          # CONFIG_PACKAGE_luci-app-shairplay is not set
          # CONFIG_PACKAGE_luci-app-siitwizard is not set
          # CONFIG_PACKAGE_luci-app-simple-adblock is not set
          # CONFIG_PACKAGE_luci-app-smartdns is not set
          # CONFIG_PACKAGE_luci-app-softethervpn is not set
          # CONFIG_PACKAGE_luci-app-splash is not set
          # CONFIG_PACKAGE_luci-app-sqm is not set
          # CONFIG_PACKAGE_luci-app-squid is not set
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssrserver-python is not set
          # CONFIG_PACKAGE_luci-app-statistics is not set
          # CONFIG_PACKAGE_luci-app-syncdial is not set
          # CONFIG_PACKAGE_luci-app-tinyproxy is not set
          # CONFIG_PACKAGE_luci-app-transmission is not set
          # CONFIG_PACKAGE_luci-app-travelmate is not set
          # CONFIG_PACKAGE_luci-app-ttyd is not set
          # CONFIG_PACKAGE_luci-app-udpxy is not set
          # CONFIG_PACKAGE_luci-app-uhttpd is not set
          CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_UnblockNeteaseMusic_Go=y
          CONFIG_UnblockNeteaseMusic_NodeJS=y
          # CONFIG_PACKAGE_luci-app-unbound is not set
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync is not set
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          # CONFIG_PACKAGE_luci-app-vnstat is not set
          # CONFIG_PACKAGE_luci-app-vpnbypass is not set
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-watchcat=y
          CONFIG_PACKAGE_luci-app-webadmin=y
          CONFIG_PACKAGE_luci-app-wifischedule=y
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          CONFIG_PACKAGE_luci-app-wol=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-app-zerotier=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          #
          # 4. Themes
          #
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          # CONFIG_PACKAGE_luci-theme-material is not set
          CONFIG_PACKAGE_luci-theme-netgear=y
          EOF


          # 常用软件包:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          cd bin/targets/*/*
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"
          
      - name: UPLOAD_ALL
        id: UPLOAD_ALL
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_ALL == 'false' && !cancelled()
        run: |
          cd openwrt
          find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}
          echo "::set-output name=status::success"
      
      - name: Extract Gz Files
        id: extract
        if: steps.compile.outputs.status == 'success' && env.extract == 'true'
        run: |
          cd openwrt/bin/targets/*/*
          gzip -qd *.img.gz  || true
          rm -f *.img.gz
          echo "::set-output name=status::success" 
          
      - name: Rename file
        id: rename
        if: env.rename == 'true' && steps.compile.outputs.status == 'success' 
        run: |
          cd openwrt/bin/targets/*/*
          for i in openwrt*; do mv -f $i `echo $i | sed "s/^openwrt-$TARGET-$SUBTARGET/${NEW_NAME}/"`; done || true
          echo "::set-output name=status::success"
      
#      - name: SSH connection to Actions
#        uses: owlboy-lin/debugger-action@master
#        if: env.SSH_ACTIONS == 'true'      
    
      - name: Gz Files
        id: Gzip_file
        if: steps.compile.outputs.status == 'success' && env.Gzip_file == 'true' 
        run: |
          cd openwrt/bin/targets/$TARGET/$SUBTARGET
          gzip *.img || true
          # rm -f *.img
          echo "::set-output name=status::success"
  
      - name: Generate Sha256sum File For Images
        run: |
          cd openwrt/bin/targets/$TARGET/$SUBTARGET
          mv sha256sums sha256sums.orig
          sha256sum *.* > sha256sums
         
          
      - name: Upload firmware directory
        id: upload_firmware
        uses: actions/upload-artifact@master
        if: steps.compile.outputs.status == 'success'
        with:
          name: ${{ env.NEW_NAME }}
          path: ${{ env.FIRMWARE }}

      - name: Upload zip
        id: upload_zip
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_ALL == 'true' 
        run: |
          cd openwrt
          rm -rf ./release/
          mkdir -p ./release/
          zip -r -j release/${{ env.NEW_NAME }}.zip bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/* || true           
          cd release
          echo "::set-env name=RELEASE::$PWD"
          echo "::set-output name=status::success"   

      - name: Upload zip
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_ALL == 'false'
        run: |
          cd openwrt
          rm -rf ./release/
          mkdir -p ./release/
          zip -r release/${{ env.NEW_NAME }}.zip bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/* || true           
          cd release
          echo "::set-env name=RELEASE::$PWD"
          echo "::set-output name=status::success" 
          
      - name: SSH connection to Actions
        uses: owlboy-lin/debugger-action@master
        if: env.SSH_ACTIONS == 'true'      
        
      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.all_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          name: 自动发布 ${{ env.NEW_NAME }}
          files: ${{ env.RELEASE }}/*
