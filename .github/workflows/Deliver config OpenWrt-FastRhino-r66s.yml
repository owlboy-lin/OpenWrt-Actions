#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: Deliver config OpenWrt-FastRhino-r66s

on:
  # schedule:
    # - cron: 0 20 * * *

  release:
    types: [published]
  
  watch:
    types: [started]

  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
      # CACHE_BUILD:
      #   description: '缓存加速'
      #   required: false
      #   default: 'true'
      #   type: boolean

        
      
env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: r66s/6.1/config/r66s-6.1.info
  Firmware_Name: r66s-6.1-all
  DIY_P1_SH: r66s/6.1/r66s-test-1.sh
  DIY_P2_SH: r66s/6.1/r66s-test-2.sh
  UPLOAD_ORGANIZE: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.GIT_USER_TOKEN }}
  TZ: Asia/Shanghai  

jobs:
  build_openwrt:

    runs-on: Ubuntu-22.04
    
    name: Deliver config OpenWrt-FastRhino-r66s

    steps:
  
      - name: CPU检测
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
          echo "CPU核心数量: $(nproc)"
          echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息:"
          echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

      - name: 释放磁盘空间
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
          testing: false
        

      - name: 初始化系统环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL https://github.com/popeyema/OpenWrt-R66s/raw/main/depends-ubuntu-latest)
          sudo apt install clang
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir


      - name: 更新时区、编译时间
        id: date
        run: |
          sudo timedatectl set-timezone "$TZ"
          echo "FILE_TIME=$(date +"%m-%d %H.%M")" >> $GITHUB_ENV
          echo "FILE_TIME1=$(date "+%Y年%m月%d日-%H点%M分")" >> $GITHUB_ENV
          echo "FILE_TIME2=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
          echo "编译开始时间..."
          START_TIME=`date +'%Y-%m-%d %H:%M:%S'`
          echo "START_SECONDS=$(date --date="$START_TIME" +%s)" >> $GITHUB_ENV

      - name: 准备完成
        uses: actions/checkout@v4
          
      - name: 下载源代码
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
         
          
      - name: patch1补丁和自定义设置
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH


      - name: 更新源 #Update feeds
        run: cd openwrt && ./scripts/feeds update -a
          
      - name: 安装源 #Install feeds
        run: |
          cd openwrt
          ./scripts/feeds install -a

      - name: patch2补丁和自定义设置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH
          make defconfig

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}


      - name: 整理固件文件
        run: |
          cd openwrt
          mkdir -p ./artifact/buildinfo
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          cp -rf ./.config ./artifact/buildinfo/${{ env.Firmware_Name }}.info
          cp -rf ./feeds.conf.default ./artifact/buildinfo/
          cd ./artifact/buildinfo/
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT
          
        

             
      - name: 上传配置文件
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.Firmware_Name }}_${{ env.FILE_DATE }}
          path: openwrt/artifact/buildinfo/

      - name: 生成发布标签
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=$(date +"%Y.%m.%d.%H.%M")-编译信息-OpenWrt-FastRhino-r66s.info" >> $GITHUB_OUTPUT
          echo "release_date=$(date +"%Y.%m.%d.%H.%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "
          ★ 源码 : https://github.com/coolsnowwolf/lede
          ★ 分支 : master
          ★ 感谢源码作者无私分享！
          
          输出编译信息 OpenWrt-FastRhino-r66s" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT
      
      - name: 自动发布固件到 Releases
        uses: softprops/action-gh-release@v2
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_USER_TOKEN }}
        with:
          name: ${{ steps.tag.outputs.release_date }} 编译信息 OpenWrt-FastRhino-r66s 
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: 删除运行记录
        uses: Mattraks/delete-workflow-runs@v2
        continue-on-error: true
        with:
          retain_days: 3     #保留最后多少记录不删除
          keep_minimum_runs: 0

      - name: 删除自动发布的旧固件
        uses: dev-drprasad/delete-older-releases@v0.3.3
        continue-on-error: true
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 20        #保留多少个releases不删除
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}